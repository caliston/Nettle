// Nettle main code
// by A. Macfarlane Smith
// (C) Archifishal Software 2001

#include "generic.h"
#include "globals.h"

#include "choices.h"
#include "init.h"
#include "main.h"
#include "misc.h"
#include "quit.h"
#include "wimp.h"

int main(void)
{
  Fortify_EnterScope();

  // Set log file time
  _kernel_swi(OS_ReadMonotonicTime, &regs, &regs);
  log_file_time=regs.r[0];

  // Turn on hourglass
  _kernel_swi(Hourglass_On, &regs, &regs);

  // Initialise application
  regs.r[0]=310;
  regs.r[1]=0x4B534154;
  regs.r[2]=(int) application_name;
  regs.r[3]=(int) initialise_messages();
  _kernel_swi(Wimp_Initialise, &regs, &regs);
  task_handle=regs.r[1];

  // load things in
  load_choices();
  load_messages();
  load_sprites();
  load_templates();
  load_zap_fonts();

  if (logging)
  {
    // create log file for use later
    log_file=fopen("<Nettle$Dir>.Log","w");
    if (log_file!=0)
    {
      fclose(log_file);
      log_file=0;
    }
  }

  // create the iconbar icon
  create_icon_bar_icon();

  // Turn off hourglass
  _kernel_swi(Hourglass_Smash, &regs, &regs);

  while (!quit_flag)
  {
    int event;

    regs.r[0]=0;
    regs.r[1]=(int) wimp_block;
    regs.r[2]=5;
    _kernel_swi(Wimp_PollIdle, &regs, &regs);
    event=regs.r[0];

    switch (event)
    {
      case 0:
        // null reason code
        null_reason_code();
        break;
      case 1:
        // redraw request
        redraw_window();
        break;
      case 2:
        // open window request - call with window handle and whether this is a wimp poll
        // or not
        open_window(wimp_block[0], true);
        break;
      case 3:
        // close window request - call with window handle
        close_window(wimp_block[0]);
        break;
      case 6:
        // mouse click request, call with x, y, buttons, window handle and icon_handle
        mouse_click(wimp_block[0], wimp_block[1], wimp_block[2], wimp_block[3], wimp_block[4]);
        break;
      case 7:
        // drag finished
        drag_finished();
        break;
      case 8:
        // key press, call with window handle, icon handle and key
        key_pressed(wimp_block[0], wimp_block[1], wimp_block[6]);
        break;
      case 9:
        // menu selection
        menu_selection();
        break;
      case 11:
        // lose caret
        lose_caret();
        break;
      case 12:
        // gain caret
        gain_caret();
        break;
      case 17:
      case 18:
        // wimp message
        wimp_message(wimp_block[4],wimp_block[1],wimp_block[2]);
        break;
    }
  }

  // close down application
  closedown_application();
}

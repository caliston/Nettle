/* Nettle main code */
/* by A. Macfarlane Smith */
/* (C) Archifishal Software 2001 */

#include "generic.h"
#include "globals.h"

#include "choices.h"
#include "init.h"
#include "main.h"
#include "misc.h"
#include "quit.h"
#include "wimp.h"

/* GCC build work-around */
FILE *__stderr = stderr;

int main(void)
{
#ifdef FORTIFY
  Fortify_EnterScope();
#endif

  /* Set log file time */
  log_file_time=_swi(OS_ReadMonotonicTime, _RETURN(0));

  /* Turn on hourglass */
  _swi(Hourglass_On, 0);

  /* Initialise application */
  task_handle= _swi(Wimp_Initialise, _IN(0)|_IN(1)|_IN(2)|_IN(3)|_RETURN(1), 310, 0x4B534154,
                                    application_name, initialise_messages());

  /* load things in */
  load_choices();
  load_messages();
  load_sprites();
  load_templates();
  load_zap_fonts();

  if (logging)
  {
    /* create log file for use later */
    log_file=fopen("<Nettle$Dir>.Log","w");
    if (log_file!=0)
    {
      fclose(log_file);
      log_file=0;
    }
  }

  /* create the iconbar icon */
  create_icon_bar_icon();

  /* Turn off hourglass */
  _swi(Hourglass_Smash, 0);

  while (!quit_flag)
  {
    int event;
    int time;

    time = _swi(OS_ReadMonotonicTime, _RETURN(0));

    /* Ignore Pointer Enter/Leave events */
    event = _swi(Wimp_PollIdle, _IN(0)|_IN(1)|_IN(2)|_RETURN(0), (1<<4)|(1<<5), wimp_block,
                                                                                time+5);

    switch (event)
    {
      case 0:
        /* null reason code */
        null_reason_code();
        break;
      case 1:
        /* redraw request */
        redraw_window();
        break;
      case 2:
        /* open window request - call with window handle and whether this */
        /* is a wimp poll or not */
        open_window(wimp_block[0], true);
        break;
      case 3:
        /* close window request - call with window handle  */
        close_window(wimp_block[0]);
        break;
      case 6:
        /* mouse click request, call with x, y, buttons, window handle and icon_handle */
        mouse_click(wimp_block[0], wimp_block[1], wimp_block[2], wimp_block[3], wimp_block[4]);
        break;
      case 7:
        /* drag finished */
        drag_finished();
        break;
      case 8:
        /* key press, call with window handle, icon handle and key */
        key_pressed(wimp_block[0], wimp_block[1], wimp_block[6]);
        break;
      case 9:
        /* menu selection */
        menu_selection();
        break;
      case 11:
        /* lose caret */
        lose_caret();
        break;
      case 12:
        /* gain caret */
        gain_caret();
        break;
      case 17:
      case 18:
        /* wimp message */
        wimp_message(wimp_block[4],wimp_block[1],wimp_block[2]);
        break;
    }
  }

  /* close down application */
  closedown_application();

  return 0;
}

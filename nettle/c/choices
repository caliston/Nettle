/**
 * Nettle Choices code
 * (C) Nettle developers 2000-2001
 *
 * $Id$
 */

#include "generic.h"
#include "globals.h"

#include "choices.h"
#include "misc.h"



static void read_choice(char *variable, const char *line, const char *lookfor)
{
  int len = strlen(lookfor);

  if (strncmp(line,lookfor,len) == 0)
  {
    strcpy(variable, line+len);
  }
}



static void read_boolean_choice(bool *var, const char *line,
                                const char *lookfor)
{
  int len = strlen(lookfor);

  if (strncmp(line,lookfor,len) == 0)
  {
    if (strncmp(line+len,"1",1) == 0)
    {
      *var=true;
    }
    else
    {
      *var=false;
    }
  }
}



static void read_integer_choice(int *var, const char *line, const char *lookfor)
{
  int len = strlen(lookfor);

  if (strncmp(line,lookfor,len) == 0)
  {
    *var=atoi(line+len);
  }
}



void load_choices(void)
{
  FILE *file_handle;
  char choices_path[256];
  char string[256];
  char *str;
  int len;

  get_system_variable(choices_path, "Choices$Write", sizeof(choices_path));

  if (choices_path[0] == '\0' )
  {
    sprintf(string, "<%s$Dir>.Choices.Choices", application_name);
  }
  else
  {
    sprintf(string, "Choices:%s.Choices", application_name);
  }

  file_handle = fopen(string,"r");
  if (file_handle == NULL)
  {
    /* If the file doesn't exist, drop back to using default choices file */
    sprintf(string, "<%s$Dir>.Choices.Default", application_name);
    file_handle = fopen(string, "r");
    if (file_handle == NULL)
      return;
  }

  while (true)
  {
    str = fgets(string,256,file_handle);
    if (!str)
      break;

    len = strlen(string);
    if (string[len-1]=='\n')
      string[len-1]='\0';

    read_choice(zap_font, string, "ZapFontHi:");
    read_choice(zap_lowres_font, string, "ZapFontLo:");

    read_boolean_choice(&logging, string, "Logging:");
    read_boolean_choice(&line_editor, string, "LineEditor:");
    read_boolean_choice(&pass_f12, string, "PassF12:");

    read_integer_choice(&line_editor_size, string, "LineEditorSize:");
  }

  fclose(file_handle);
}

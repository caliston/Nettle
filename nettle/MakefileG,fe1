# gcc / NetLib Makefile for Nettle
# by A. Macfarlane Smith
# (C) Archifishal Software 2001

CC = gcc
CFLAGS = -mstubs

LINK = gcc
LINKFLAGS = -mstubs -debug

WIPE = wipe
WIPEFLAGS = ~CFR~V

OBJASM = as
OBJASMFLAGS =

# also o.fortify, but not just now

all:	o.chardefn o.choices o.globals o.init o.lineedit o.main o.misc o.nettle \
	o.process o.quit o.seln o.socket o.wimp o.zapgen o.fortify
	$(LINK) $(LINKFLAGS) NetLib:o.NetLib o.chardefn o.choices o.globals \
	o.init o.lineedit o.main o.misc o.nettle o.process o.quit o.seln o.socket o.wimp \
	o.zapgen o.fortify \
	-o !Nettle.!RunImage

clean:
	$(WIPE) o.* $(WIPEFLAGS)

o.chardefn:	c.chardefn h.generic h.globals h.chardefn h.misc
		$(CC) $(CFLAGS) -c c.chardefn

o.choices:	c.choices h.generic h.globals h.choices h.misc
		$(CC) $(CFLAGS) -c c.choices

o.fortify:	c.fortify h.fortify h.ufortify
		$(CC) $(CFLAGS) -c c.fortify

o.globals:	c.globals h.generic h.globals h.zapredraw
		$(CC) $(CFLAGS) -c c.globals
	
o.init:		c.init h.generic h.globals h.chardefn h.init h.misc h.nettle h.quit h.wimp \
		h.zapredraw
		$(CC) $(CFLAGS) -c c.init

o.lineedit:	c.lineedit h.generic h.globals h.lineedit h.misc h.wimp
		$(CC) $(CFLAGS) -c c.lineedit

o.main:		c.main h.generic h.globals h.choices h.init h.main h.misc h.quit h.wimp
		$(CC) $(CFLAGS) -c c.main

o.misc:		c.misc h.generic h.globals h.misc
		$(CC) $(CFLAGS) -c c.misc

o.nettle:	c.nettle h.generic h.globals h.misc h.nettle h.seln h.socket h.wimp h.zapredraw
		$(CC) $(CFLAGS) -c c.nettle

o.process:	c.process h.generic h.globals h.graphics h.misc h.nettle h.process h.seln \
		h.wimp h.zapredraw
		$(CC) $(CFLAGS) -c c.process

o.quit:		c.quit h.generic h.globals h.misc h.nettle h.quit
		$(CC) $(CFLAGS) -c c.quit

o.seln:		c.seln h.generic h.globals h.nettle h.seln h.wimp h.zapredraw
		$(CC) $(CFLAGS) -c c.seln

o.socket:	c.socket h.generic h.globals h.socket
		$(CC) $(CFLAGS) -INetLib: -c c.socket

o.wimp:		c.wimp h.generic h.globals h.misc h.nettle h.process h.seln h.socket h.wimp \
		h.zapredraw
		$(CC) $(CFLAGS) -c c.wimp

o.zapgen:	s.zapgengc
		$(OBJASM) $(OBJASMFLAGS) s.zapgengc -o o.zapgen
